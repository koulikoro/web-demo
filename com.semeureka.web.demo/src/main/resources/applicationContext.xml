<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
	<context:component-scan base-package="com.semeureka">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	<tx:annotation-driven />

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl" value="jdbc:mysql://localhost:3316/test2" />
		<property name="user" value="root" />
		<property name="password" value="" />
	</bean>
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.semeureka.*.entity" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
	</bean>
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="passwordService" class="org.apache.shiro.authc.credential.DefaultPasswordService" />
	<bean id="realm" class="org.apache.shiro.realm.jdbc.JdbcRealm">
		<property name="dataSource" ref="dataSource" />
		<property name="authenticationQuery" value="select user_password from t_user where user_name = ?" />
		<property name="userRolesQuery" value="select r.role_name from t_user u, t_user_role ur, t_role r where u.id = ur.user_id and ur.role_id = r.id and user_name = ?" />
		<property name="permissionsQuery" value="select p.permission_name from t_role r, t_role_permission rp, t_permission p where r.id = rp.role_id and p.id = rp.permission_id and r.role_name = ?" />
		<property name="credentialsMatcher">
			<bean class="org.apache.shiro.authc.credential.PasswordMatcher">
				<property name="passwordService" ref="passwordService" />
			</bean>
		</property>
	</bean>
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="realm" />
		<property name="cacheManager">
			<bean class="org.apache.shiro.cache.MemoryConstrainedCacheManager" />
		</property>
	</bean>
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/user/login" />
		<property name="successUrl" value="/users" />
		<property name="unauthorizedUrl" value="/error" />
		<property name="filterChainDefinitions">
			<value>
				/resources/** = anon
				/user/login = authc
				/** = user
			</value>
		</property>
	</bean>
</beans>
